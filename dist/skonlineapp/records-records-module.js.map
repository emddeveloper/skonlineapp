{"version":3,"sources":["./src/app/records/records.module.ts","./src/app/records/records-routing.module.ts","./src/app/records/record-home/record-home.component.html","./src/app/records/record-home/record-home.component.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEiB;AACU;;AAYnE,MAAM,aAAa;;0EAAb,aAAa;4FAAb,aAAa;gGALf;YACP,4DAAY;YACZ,4EAAoB;SACrB;mIAEU,aAAa,mBAPtB,sFAAmB,aAGnB,4DAAY;QACZ,4EAAoB;;;;;;;;;;;;;ACZxB;AAAA;AAAA;AAAA;AAAA;AAAuD;AACmB;;;AAE1E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sFAAmB;KAC/B;CACF,CAAC;AAMK,MAAM,oBAAoB;;wFAApB,oBAAoB;mGAApB,oBAAoB;uGAHtB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,oBAAoB,uFAFrB,4DAAY;;;;;;;;;;;;;;;;;;;;;;ICApB,qEAAmC;IACjC,wEAAsB;IAAA,uDAAiB;IAAA,4DAAK;IAC5C,wEAA6B;IAAA,uDAAgB;IAAA,4DAAK;IAClD,wEAA8B;IAAA,uDAAiB;IAAA,4DAAK;IACpD,wEAAyB;IAAA,uDAAmB;IAAA,4DAAK;IACjD,wEAAuB;IAAA,wDAAkB;IAAA,4DAAK;IAC9C,yEAAyB;IAAA,wDAAmB;IAAA,4DAAK;IACjD,yEAAyB;IAAA,wDAAsC;;IAAA,4DAAK;IACtE,4DAAK;;;IAPmB,0DAAiB;IAAjB,+EAAiB;IACV,0DAAgB;IAAhB,8EAAgB;IACf,0DAAiB;IAAjB,+EAAiB;IACtB,0DAAmB;IAAnB,iFAAmB;IACrB,0DAAkB;IAAlB,gFAAkB;IAChB,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAsC;IAAtC,+JAAsC;;;IApBrE,2EAA+C;IAC7C,wEAAO;IACL,qEAAI;IACF,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,mEAAO;IAAA,4DAAK;IAChB,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,mEAAO;IAAA,4DAAK;IAChB,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IACpB,4DAAK;IACP,4DAAQ;IACR,yEAAO;IACL,yHAQK;IACP,4DAAQ;IACV,4DAAQ;;;IAVmB,2DAAU;IAAV,mFAAU;;;IAWrC,0EAAwD;IACtD,0EAAkC;IAAA,kEAAO;IAAA,4DAAM;IACjD,4DAAM;;ACnBC,MAAM,mBAAmB;IAC9B,YAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;IAAG,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC7C,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;;sFAPU,mBAAmB;mGAAnB,mBAAmB;QDPhC,oHAuBQ;QACR,+GAEM;;QA1B0B,6EAAa;QAwBL,0DAAc;QAAd,8EAAc","file":"records-records-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RecordsRoutingModule } from './records-routing.module';\nimport { RecordHomeComponent } from './record-home/record-home.component';\n\n\n@NgModule({\n  declarations: [\n    RecordHomeComponent\n  ],\n  imports: [\n    CommonModule,\n    RecordsRoutingModule\n  ]\n})\nexport class RecordsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RecordHomeComponent } from './record-home/record-home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecordHomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecordsRoutingModule {}\n","<table class=\"ui celled table\" *ngIf=\"records\">\n  <thead>\n    <tr>\n      <th>Cash</th>\n      <th>Jio Balance</th>\n      <th>Bandhan Bank</th>\n      <th>Credits</th>\n      <th>Total</th>\n      <th>Profits</th>\n      <th>Timestamp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let record of records\">\n      <td data-label=\"Cash\">{{ record.cash }}</td>\n      <td data-label=\"Jio Balance\">{{ record.jio }}</td>\n      <td data-label=\"Bandhan Bank\">{{ record.bank }}</td>\n      <td data-label=\"Credits\">{{ record.credit }}</td>\n      <td data-label=\"Total\">{{ record.total }}</td>\n      <td data-label=\"Profits\">{{ record.profit }}</td>\n      <td data-label=\"Profits\">{{ record.timestamp | date: \"short\" }}</td>\n    </tr>\n  </tbody>\n</table>\n<div class=\"ui active inverted dimmer\" *ngIf=\"!records\">\n  <div class=\"ui large text loader\">Loading</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SkonlineService } from '../../skonline.service';\n@Component({\n  selector: 'app-record-home',\n  templateUrl: './record-home.component.html',\n  styleUrls: ['./record-home.component.css'],\n})\nexport class RecordHomeComponent implements OnInit {\n  constructor(private skonline: SkonlineService) {}\n  records: any;\n  ngOnInit(): void {\n    this.skonline.getData().subscribe((response) => {\n      this.records = response;\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}